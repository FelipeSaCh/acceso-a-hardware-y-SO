<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UH0X2/pa+sP0NxN7xDCXJJ1Lu3PxvXK/1119KP2jxEV0ReohldE/mCRJZ1MHfPfee3j+c+nvJ45Zb28Y
        /eNIknQ+dbj3Xvyb06XpLyeO2IoPW5EkHV+7w/Id7m9JP5Q4ZL2gwXlzSdJx1eHeo8Jd3OZHEoekyw6O
        fuCSJB11Pd9+T/qVxAXoLQc9xzH6IUuSdFz1ouyuS//ziXPUH5zz5pKkfaqDvQ+g6UNm/kniLPTJPqMf
        piRJF7sePe7T6brs7N9LnEZvJRj9ECVJ2qc6r7ok+T9LnKQXwjl3LknaUt1j75XxfydxgmEuSdpinV/P
        prclYvRDkiRpK/XiuS5S83vpr6ZljX44kiRtrd6t1ee2/3Za0uiHIknSVusee1c+Xe5Wt9EPQ5KkrdcL
        565PP5yWMPohSJI0S0+k/5imN3rxkiTNVJ/u9tY0tdELlyRptnpuvYvS/OM0pdGLliRp1rrc+aVpOqMX
        K0nSzHUJ2fekqVgpTpK0YrsFaf5pmkJvwjfUJUmr9kx6fZpCr/4bvUhJklao96z/btq8+5O9dEnSyvW8
        +jvT5vXbyegFSpK0Si+lj6dNezDZS5ckrd53063p36TNci5dkqSXez69PW3S7amPnxu9MEmSVqvn1f9v
        2qRHkqEuSdLLdai/L23SY8n5dEmSXq4Xy703bZLz6ZIkvdJm99RvSb3Sb/SiJElasQ71y9Pm3JGcT5ck
        6ZU61P8kbc59yVCXJOmVOtTflTbHUJck6dV1hdW3pM3pSnKGuiRJr9Sh/n/S5jyQ3M4mSftdt9MnN/rf
        6XDqinL/M23Ow2nVN0dfd+9F7DeyXb2972AH/7vW8yytv+5gfbD+rpP/u92v2XXy73kunfz3O119Ux5W
        o99/1Ojv3E7+GZxtJ/8sj6rRn61zb/RvfyGN3mNnavT+bc8NevZAfYb2rqcP9NSJnjzREyd6/ERd5+PR
        1EW8uj19KHVnqU+9vDfdk+5Kd6au3tk1xb+Zbko3pq+n69N16UvpqnRl+mz6VPpE+mj6UHp/6r3T7c/S
        p1P//L6HDfnDre+JTa793jfgim+GfggAtuwvpR9NPUzcJU37ZLFvpH65MeQvrP4cN6nfLlf7x+/r7esG
        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
</value>
  </data>
</root>